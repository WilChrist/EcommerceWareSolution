//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EcommerceWare.API
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ecommerceEntities : DbContext
    {
        public ecommerceEntities()
            : base("name=ecommerceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Addresses> Addresses { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<Contacts> Contacts { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<Groups> Groups { get; set; }
        public virtual DbSet<Login_informations> Login_informations { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Payment_Methods> Payment_Methods { get; set; }
        public virtual DbSet<Producers> Producers { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Reclamations> Reclamations { get; set; }
        public virtual DbSet<Returns> Returns { get; set; }
        public virtual DbSet<Shippment_Methods> Shippment_Methods { get; set; }
        public virtual DbSet<Status_Orders> Status_Orders { get; set; }
        public virtual DbSet<Status_Reclamation> Status_Reclamation { get; set; }
        public virtual DbSet<Suppliers> Suppliers { get; set; }
        public virtual DbSet<Supply> Supply { get; set; }
        public virtual DbSet<Taxes_Level> Taxes_Level { get; set; }
        public virtual DbSet<Order_Details> Order_Details { get; set; }
        public virtual DbSet<Supply_Details> Supply_Details { get; set; }
    
        public virtual int AddCustomersAddress(Nullable<int> idCustomer, string country, string city, string zip_code, string street_Name, Nullable<int> street_Number, string state)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("Zip_code", zip_code) :
                new ObjectParameter("Zip_code", typeof(string));
    
            var street_NameParameter = street_Name != null ?
                new ObjectParameter("Street_Name", street_Name) :
                new ObjectParameter("Street_Name", typeof(string));
    
            var street_NumberParameter = street_Number.HasValue ?
                new ObjectParameter("Street_Number", street_Number) :
                new ObjectParameter("Street_Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCustomersAddress", idCustomerParameter, countryParameter, cityParameter, zip_codeParameter, street_NameParameter, street_NumberParameter, stateParameter);
        }
    
        public virtual int DeleteCategory(Nullable<int> idCategory)
        {
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCategory", idCategoryParameter);
        }
    
        public virtual int DeleteCustomer(Nullable<int> idCustomer)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", idCustomerParameter);
        }
    
        public virtual int DeleteCustomersAddress(Nullable<int> idAddress)
        {
            var idAddressParameter = idAddress.HasValue ?
                new ObjectParameter("IdAddress", idAddress) :
                new ObjectParameter("IdAddress", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomersAddress", idAddressParameter);
        }
    
        public virtual int DeleteEmployee(Nullable<int> idEmployee)
        {
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("IdEmployee", idEmployee) :
                new ObjectParameter("IdEmployee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", idEmployeeParameter);
        }
    
        public virtual int DeleteGroup(Nullable<int> idGroup)
        {
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGroup", idGroupParameter);
        }
    
        public virtual int DeleteOrder(Nullable<int> idOrder)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrder", idOrderParameter);
        }
    
        public virtual int DeletePaymentMethods(Nullable<int> idPaymentMethod)
        {
            var idPaymentMethodParameter = idPaymentMethod.HasValue ?
                new ObjectParameter("IdPaymentMethod", idPaymentMethod) :
                new ObjectParameter("IdPaymentMethod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePaymentMethods", idPaymentMethodParameter);
        }
    
        public virtual int DeleteProducer(Nullable<int> idProducer)
        {
            var idProducerParameter = idProducer.HasValue ?
                new ObjectParameter("IdProducer", idProducer) :
                new ObjectParameter("IdProducer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProducer", idProducerParameter);
        }
    
        public virtual int DeleteProduct(Nullable<int> idProduct)
        {
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", idProductParameter);
        }
    
        public virtual int DeleteReclamation(Nullable<int> idReclamation)
        {
            var idReclamationParameter = idReclamation.HasValue ?
                new ObjectParameter("IdReclamation", idReclamation) :
                new ObjectParameter("IdReclamation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReclamation", idReclamationParameter);
        }
    
        public virtual int DeleteReclamationStatus(Nullable<int> idReclamationStatus)
        {
            var idReclamationStatusParameter = idReclamationStatus.HasValue ?
                new ObjectParameter("IdReclamationStatus", idReclamationStatus) :
                new ObjectParameter("IdReclamationStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReclamationStatus", idReclamationStatusParameter);
        }
    
        public virtual int DeleteReturn(Nullable<int> idReturn)
        {
            var idReturnParameter = idReturn.HasValue ?
                new ObjectParameter("IdReturn", idReturn) :
                new ObjectParameter("IdReturn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReturn", idReturnParameter);
        }
    
        public virtual int DeleteShippmentMethods(Nullable<int> idShippmentMethod)
        {
            var idShippmentMethodParameter = idShippmentMethod.HasValue ?
                new ObjectParameter("IdShippmentMethod", idShippmentMethod) :
                new ObjectParameter("IdShippmentMethod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteShippmentMethods", idShippmentMethodParameter);
        }
    
        public virtual int DeleteSupplier(Nullable<int> idSupplier)
        {
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSupplier", idSupplierParameter);
        }
    
        public virtual int DeleteSupply(Nullable<int> idSupply)
        {
            var idSupplyParameter = idSupply.HasValue ?
                new ObjectParameter("IdSupply", idSupply) :
                new ObjectParameter("IdSupply", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSupply", idSupplyParameter);
        }
    
        public virtual int DeleteTax(Nullable<int> idTax_Level)
        {
            var idTax_LevelParameter = idTax_Level.HasValue ?
                new ObjectParameter("IdTax_Level", idTax_Level) :
                new ObjectParameter("IdTax_Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTax", idTax_LevelParameter);
        }
    
        public virtual ObjectResult<FindEmployee_Result> FindEmployee(string firstName, string lastName)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindEmployee_Result>("FindEmployee", firstNameParameter, lastNameParameter);
        }
    
        public virtual ObjectResult<FindOverdueReclamations_Result> FindOverdueReclamations(Nullable<int> days)
        {
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindOverdueReclamations_Result>("FindOverdueReclamations", daysParameter);
        }
    
        public virtual ObjectResult<FindProduct_Result> FindProduct(string name_Product)
        {
            var name_ProductParameter = name_Product != null ?
                new ObjectParameter("Name_Product", name_Product) :
                new ObjectParameter("Name_Product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindProduct_Result>("FindProduct", name_ProductParameter);
        }
    
        public virtual int InsertCategory(string name_Category, string description_Category, Nullable<int> idParent_Category)
        {
            var name_CategoryParameter = name_Category != null ?
                new ObjectParameter("Name_Category", name_Category) :
                new ObjectParameter("Name_Category", typeof(string));
    
            var description_CategoryParameter = description_Category != null ?
                new ObjectParameter("Description_Category", description_Category) :
                new ObjectParameter("Description_Category", typeof(string));
    
            var idParent_CategoryParameter = idParent_Category.HasValue ?
                new ObjectParameter("IdParent_Category", idParent_Category) :
                new ObjectParameter("IdParent_Category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCategory", name_CategoryParameter, description_CategoryParameter, idParent_CategoryParameter);
        }
    
        public virtual int InsertCustomer(string login, string password, string firstName, string lastName, string email, string phone_Number, string country, string city, string zip_code, string street_Name, Nullable<int> street_Number, string state)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("Zip_code", zip_code) :
                new ObjectParameter("Zip_code", typeof(string));
    
            var street_NameParameter = street_Name != null ?
                new ObjectParameter("Street_Name", street_Name) :
                new ObjectParameter("Street_Name", typeof(string));
    
            var street_NumberParameter = street_Number.HasValue ?
                new ObjectParameter("Street_Number", street_Number) :
                new ObjectParameter("Street_Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomer", loginParameter, passwordParameter, firstNameParameter, lastNameParameter, emailParameter, phone_NumberParameter, countryParameter, cityParameter, zip_codeParameter, street_NameParameter, street_NumberParameter, stateParameter);
        }
    
        public virtual int InsertEmployee(string login, string password, Nullable<int> idGroup, string firstName, string lastName, string email, string phone_Number, string country, string city, string zip_code, string street_Name, Nullable<int> street_Number, string state)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("Zip_code", zip_code) :
                new ObjectParameter("Zip_code", typeof(string));
    
            var street_NameParameter = street_Name != null ?
                new ObjectParameter("Street_Name", street_Name) :
                new ObjectParameter("Street_Name", typeof(string));
    
            var street_NumberParameter = street_Number.HasValue ?
                new ObjectParameter("Street_Number", street_Number) :
                new ObjectParameter("Street_Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployee", loginParameter, passwordParameter, idGroupParameter, firstNameParameter, lastNameParameter, emailParameter, phone_NumberParameter, countryParameter, cityParameter, zip_codeParameter, street_NameParameter, street_NumberParameter, stateParameter);
        }
    
        public virtual int InsertGroup(string name, string role)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGroup", nameParameter, roleParameter);
        }
    
        public virtual int InsertOrder(Nullable<int> idCustomer, Nullable<int> idPayment_Method, Nullable<int> idShippment_Method, string description, Nullable<int> discountPercent)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var idPayment_MethodParameter = idPayment_Method.HasValue ?
                new ObjectParameter("IdPayment_Method", idPayment_Method) :
                new ObjectParameter("IdPayment_Method", typeof(int));
    
            var idShippment_MethodParameter = idShippment_Method.HasValue ?
                new ObjectParameter("IdShippment_Method", idShippment_Method) :
                new ObjectParameter("IdShippment_Method", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var discountPercentParameter = discountPercent.HasValue ?
                new ObjectParameter("DiscountPercent", discountPercent) :
                new ObjectParameter("DiscountPercent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrder", idCustomerParameter, idPayment_MethodParameter, idShippment_MethodParameter, descriptionParameter, discountPercentParameter);
        }
    
        public virtual int InsertOrderStatus(string name_Status_Order)
        {
            var name_Status_OrderParameter = name_Status_Order != null ?
                new ObjectParameter("Name_Status_Order", name_Status_Order) :
                new ObjectParameter("Name_Status_Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrderStatus", name_Status_OrderParameter);
        }
    
        public virtual int InsertPaymentMethods(string name, string description)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPaymentMethods", nameParameter, descriptionParameter);
        }
    
        public virtual int InsertProducer(string name_Producer, string firstName, string lastName, string email, string phone_Number, string country, string city, string zip_code, string street_Name, Nullable<int> street_Number, string state)
        {
            var name_ProducerParameter = name_Producer != null ?
                new ObjectParameter("Name_Producer", name_Producer) :
                new ObjectParameter("Name_Producer", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("Zip_code", zip_code) :
                new ObjectParameter("Zip_code", typeof(string));
    
            var street_NameParameter = street_Name != null ?
                new ObjectParameter("Street_Name", street_Name) :
                new ObjectParameter("Street_Name", typeof(string));
    
            var street_NumberParameter = street_Number.HasValue ?
                new ObjectParameter("Street_Number", street_Number) :
                new ObjectParameter("Street_Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProducer", name_ProducerParameter, firstNameParameter, lastNameParameter, emailParameter, phone_NumberParameter, countryParameter, cityParameter, zip_codeParameter, street_NameParameter, street_NumberParameter, stateParameter);
        }
    
        public virtual int InsertProduct(string name_Product, Nullable<int> idCategory, Nullable<int> idProducer, Nullable<int> idSupplier, Nullable<decimal> net_Price, Nullable<int> idTax_Level, string description_Product, Nullable<int> quantity_Possessed, Nullable<decimal> gross_Price, string image_Url)
        {
            var name_ProductParameter = name_Product != null ?
                new ObjectParameter("Name_Product", name_Product) :
                new ObjectParameter("Name_Product", typeof(string));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var idProducerParameter = idProducer.HasValue ?
                new ObjectParameter("IdProducer", idProducer) :
                new ObjectParameter("IdProducer", typeof(int));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            var net_PriceParameter = net_Price.HasValue ?
                new ObjectParameter("Net_Price", net_Price) :
                new ObjectParameter("Net_Price", typeof(decimal));
    
            var idTax_LevelParameter = idTax_Level.HasValue ?
                new ObjectParameter("IdTax_Level", idTax_Level) :
                new ObjectParameter("IdTax_Level", typeof(int));
    
            var description_ProductParameter = description_Product != null ?
                new ObjectParameter("Description_Product", description_Product) :
                new ObjectParameter("Description_Product", typeof(string));
    
            var quantity_PossessedParameter = quantity_Possessed.HasValue ?
                new ObjectParameter("Quantity_Possessed", quantity_Possessed) :
                new ObjectParameter("Quantity_Possessed", typeof(int));
    
            var gross_PriceParameter = gross_Price.HasValue ?
                new ObjectParameter("Gross_Price", gross_Price) :
                new ObjectParameter("Gross_Price", typeof(decimal));
    
            var image_UrlParameter = image_Url != null ?
                new ObjectParameter("Image_Url", image_Url) :
                new ObjectParameter("Image_Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProduct", name_ProductParameter, idCategoryParameter, idProducerParameter, idSupplierParameter, net_PriceParameter, idTax_LevelParameter, description_ProductParameter, quantity_PossessedParameter, gross_PriceParameter, image_UrlParameter);
        }
    
        public virtual int InsertProductIntoOrder(Nullable<int> idOrder, Nullable<int> idProduct, Nullable<int> quantity)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProductIntoOrder", idOrderParameter, idProductParameter, quantityParameter);
        }
    
        public virtual int InsertReclamation(Nullable<int> idOrder, Nullable<int> idProduct, string description)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertReclamation", idOrderParameter, idProductParameter, descriptionParameter);
        }
    
        public virtual int InsertReclamationStatus(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertReclamationStatus", nameParameter);
        }
    
        public virtual int InsertReturn(Nullable<int> idOrder)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertReturn", idOrderParameter);
        }
    
        public virtual int InsertReturnDetails(Nullable<int> idReturn, Nullable<int> idProduct)
        {
            var idReturnParameter = idReturn.HasValue ?
                new ObjectParameter("IdReturn", idReturn) :
                new ObjectParameter("IdReturn", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertReturnDetails", idReturnParameter, idProductParameter);
        }
    
        public virtual int InsertShippmentMethods(string name, string description, Nullable<decimal> price)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertShippmentMethods", nameParameter, descriptionParameter, priceParameter);
        }
    
        public virtual int InsertSupply(Nullable<decimal> priceSupply, Nullable<int> idSupplier)
        {
            var priceSupplyParameter = priceSupply.HasValue ?
                new ObjectParameter("PriceSupply", priceSupply) :
                new ObjectParameter("PriceSupply", typeof(decimal));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSupply", priceSupplyParameter, idSupplierParameter);
        }
    
        public virtual int InsertSupplyDetail(Nullable<int> idSupply, Nullable<int> idProduct, Nullable<decimal> price_Item, Nullable<int> quantity_Supplied)
        {
            var idSupplyParameter = idSupply.HasValue ?
                new ObjectParameter("IdSupply", idSupply) :
                new ObjectParameter("IdSupply", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            var price_ItemParameter = price_Item.HasValue ?
                new ObjectParameter("Price_Item", price_Item) :
                new ObjectParameter("Price_Item", typeof(decimal));
    
            var quantity_SuppliedParameter = quantity_Supplied.HasValue ?
                new ObjectParameter("Quantity_Supplied", quantity_Supplied) :
                new ObjectParameter("Quantity_Supplied", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSupplyDetail", idSupplyParameter, idProductParameter, price_ItemParameter, quantity_SuppliedParameter);
        }
    
        public virtual int InsertTax(string name_Tax, Nullable<int> tax_Percent)
        {
            var name_TaxParameter = name_Tax != null ?
                new ObjectParameter("Name_Tax", name_Tax) :
                new ObjectParameter("Name_Tax", typeof(string));
    
            var tax_PercentParameter = tax_Percent.HasValue ?
                new ObjectParameter("Tax_Percent", tax_Percent) :
                new ObjectParameter("Tax_Percent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTax", name_TaxParameter, tax_PercentParameter);
        }
    
        public virtual int RemoveProductFromOrder(Nullable<int> idOrder, Nullable<int> idProduct)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveProductFromOrder", idOrderParameter, idProductParameter);
        }
    
        public virtual int SetEmployeesGroup(Nullable<int> idEmployee, Nullable<int> idGroup)
        {
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("IdEmployee", idEmployee) :
                new ObjectParameter("IdEmployee", typeof(int));
    
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetEmployeesGroup", idEmployeeParameter, idGroupParameter);
        }
    
        public virtual int SetMainCustomersAddress(Nullable<int> idCustomer, Nullable<int> idAddress)
        {
            var idCustomerParameter = idCustomer.HasValue ?
                new ObjectParameter("IdCustomer", idCustomer) :
                new ObjectParameter("IdCustomer", typeof(int));
    
            var idAddressParameter = idAddress.HasValue ?
                new ObjectParameter("IdAddress", idAddress) :
                new ObjectParameter("IdAddress", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetMainCustomersAddress", idCustomerParameter, idAddressParameter);
        }
    
        public virtual ObjectResult<ShowBestSellers_Result> ShowBestSellers(Nullable<int> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowBestSellers_Result>("ShowBestSellers", numberParameter);
        }
    
        public virtual ObjectResult<ShowProduceritem_Result> ShowProduceritem(string name_Producer, Nullable<int> idProducer)
        {
            var name_ProducerParameter = name_Producer != null ?
                new ObjectParameter("Name_Producer", name_Producer) :
                new ObjectParameter("Name_Producer", typeof(string));
    
            var idProducerParameter = idProducer.HasValue ?
                new ObjectParameter("IdProducer", idProducer) :
                new ObjectParameter("IdProducer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowProduceritem_Result>("ShowProduceritem", name_ProducerParameter, idProducerParameter);
        }
    
        public virtual ObjectResult<ShowProductsFromOrderNr_Result> ShowProductsFromOrderNr(Nullable<int> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowProductsFromOrderNr_Result>("ShowProductsFromOrderNr", numberParameter);
        }
    
        public virtual ObjectResult<ShowReturnDeatil_Result> ShowReturnDeatil(Nullable<int> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowReturnDeatil_Result>("ShowReturnDeatil", numberParameter);
        }
    
        public virtual ObjectResult<ShowSalesByCities_Result> ShowSalesByCities(Nullable<int> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowSalesByCities_Result>("ShowSalesByCities", numberParameter);
        }
    
        public virtual ObjectResult<ShowSupplydetail_Result> ShowSupplydetail(Nullable<int> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowSupplydetail_Result>("ShowSupplydetail", numberParameter);
        }
    
        public virtual int Supplier_Add(string name_Supplier, string firstName, string lastName, string email, string phone_Number, string country, string city, string zip_code, string street_Name, Nullable<int> street_Number, string state)
        {
            var name_SupplierParameter = name_Supplier != null ?
                new ObjectParameter("Name_Supplier", name_Supplier) :
                new ObjectParameter("Name_Supplier", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("Zip_code", zip_code) :
                new ObjectParameter("Zip_code", typeof(string));
    
            var street_NameParameter = street_Name != null ?
                new ObjectParameter("Street_Name", street_Name) :
                new ObjectParameter("Street_Name", typeof(string));
    
            var street_NumberParameter = street_Number.HasValue ?
                new ObjectParameter("Street_Number", street_Number) :
                new ObjectParameter("Street_Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supplier_Add", name_SupplierParameter, firstNameParameter, lastNameParameter, emailParameter, phone_NumberParameter, countryParameter, cityParameter, zip_codeParameter, street_NameParameter, street_NumberParameter, stateParameter);
        }
    
        public virtual int UpdateAddress(Nullable<int> idAddress, string country, string city, string zip_code, string street_Name, Nullable<int> street_Number, string state)
        {
            var idAddressParameter = idAddress.HasValue ?
                new ObjectParameter("IdAddress", idAddress) :
                new ObjectParameter("IdAddress", typeof(int));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zip_codeParameter = zip_code != null ?
                new ObjectParameter("Zip_code", zip_code) :
                new ObjectParameter("Zip_code", typeof(string));
    
            var street_NameParameter = street_Name != null ?
                new ObjectParameter("Street_Name", street_Name) :
                new ObjectParameter("Street_Name", typeof(string));
    
            var street_NumberParameter = street_Number.HasValue ?
                new ObjectParameter("Street_Number", street_Number) :
                new ObjectParameter("Street_Number", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAddress", idAddressParameter, countryParameter, cityParameter, zip_codeParameter, street_NameParameter, street_NumberParameter, stateParameter);
        }
    
        public virtual int UpdateCategory(string name_Category, string description_Category, Nullable<int> idParent_Category, Nullable<int> idCategory)
        {
            var name_CategoryParameter = name_Category != null ?
                new ObjectParameter("Name_Category", name_Category) :
                new ObjectParameter("Name_Category", typeof(string));
    
            var description_CategoryParameter = description_Category != null ?
                new ObjectParameter("Description_Category", description_Category) :
                new ObjectParameter("Description_Category", typeof(string));
    
            var idParent_CategoryParameter = idParent_Category.HasValue ?
                new ObjectParameter("IdParent_Category", idParent_Category) :
                new ObjectParameter("IdParent_Category", typeof(int));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCategory", name_CategoryParameter, description_CategoryParameter, idParent_CategoryParameter, idCategoryParameter);
        }
    
        public virtual int UpdateContact(Nullable<int> idContact, string firstName, string lastName, string email, string phone_Number)
        {
            var idContactParameter = idContact.HasValue ?
                new ObjectParameter("IdContact", idContact) :
                new ObjectParameter("IdContact", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContact", idContactParameter, firstNameParameter, lastNameParameter, emailParameter, phone_NumberParameter);
        }
    
        public virtual int UpdateGroup(Nullable<int> idGroup, string name, string role)
        {
            var idGroupParameter = idGroup.HasValue ?
                new ObjectParameter("IdGroup", idGroup) :
                new ObjectParameter("IdGroup", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGroup", idGroupParameter, nameParameter, roleParameter);
        }
    
        public virtual int UpdateLoginInformations(Nullable<int> idLogin_information, string login, string password)
        {
            var idLogin_informationParameter = idLogin_information.HasValue ?
                new ObjectParameter("IdLogin_information", idLogin_information) :
                new ObjectParameter("IdLogin_information", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLoginInformations", idLogin_informationParameter, loginParameter, passwordParameter);
        }
    
        public virtual int UpdateOrder(Nullable<int> idOrder, Nullable<int> idEmployee, Nullable<int> idStatusOrder, Nullable<int> idPaymentMethod, Nullable<int> idShippmentMethod, string description, Nullable<int> discountPercent)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("IdEmployee", idEmployee) :
                new ObjectParameter("IdEmployee", typeof(int));
    
            var idStatusOrderParameter = idStatusOrder.HasValue ?
                new ObjectParameter("IdStatusOrder", idStatusOrder) :
                new ObjectParameter("IdStatusOrder", typeof(int));
    
            var idPaymentMethodParameter = idPaymentMethod.HasValue ?
                new ObjectParameter("IdPaymentMethod", idPaymentMethod) :
                new ObjectParameter("IdPaymentMethod", typeof(int));
    
            var idShippmentMethodParameter = idShippmentMethod.HasValue ?
                new ObjectParameter("IdShippmentMethod", idShippmentMethod) :
                new ObjectParameter("IdShippmentMethod", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var discountPercentParameter = discountPercent.HasValue ?
                new ObjectParameter("DiscountPercent", discountPercent) :
                new ObjectParameter("DiscountPercent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrder", idOrderParameter, idEmployeeParameter, idStatusOrderParameter, idPaymentMethodParameter, idShippmentMethodParameter, descriptionParameter, discountPercentParameter);
        }
    
        public virtual int UpdateOrderStatus(Nullable<int> idOrderStatus, string name_Status_Order)
        {
            var idOrderStatusParameter = idOrderStatus.HasValue ?
                new ObjectParameter("IdOrderStatus", idOrderStatus) :
                new ObjectParameter("IdOrderStatus", typeof(int));
    
            var name_Status_OrderParameter = name_Status_Order != null ?
                new ObjectParameter("Name_Status_Order", name_Status_Order) :
                new ObjectParameter("Name_Status_Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderStatus", idOrderStatusParameter, name_Status_OrderParameter);
        }
    
        public virtual int UpdatePaymentMethods(Nullable<int> idPaymentMethod, string name, string description)
        {
            var idPaymentMethodParameter = idPaymentMethod.HasValue ?
                new ObjectParameter("IdPaymentMethod", idPaymentMethod) :
                new ObjectParameter("IdPaymentMethod", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePaymentMethods", idPaymentMethodParameter, nameParameter, descriptionParameter);
        }
    
        public virtual int UpdateProducer(string name_Producer, Nullable<int> idProducer)
        {
            var name_ProducerParameter = name_Producer != null ?
                new ObjectParameter("Name_Producer", name_Producer) :
                new ObjectParameter("Name_Producer", typeof(string));
    
            var idProducerParameter = idProducer.HasValue ?
                new ObjectParameter("IdProducer", idProducer) :
                new ObjectParameter("IdProducer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProducer", name_ProducerParameter, idProducerParameter);
        }
    
        public virtual int UpdateProduct(string name_Product, Nullable<int> idCategory, Nullable<int> idProducer, Nullable<int> idSupplier, Nullable<decimal> net_Price, Nullable<int> idTax_Level, string description_Product, Nullable<int> quantity_Possessed, Nullable<decimal> gross_Price, Nullable<int> idProduct, string image_Url)
        {
            var name_ProductParameter = name_Product != null ?
                new ObjectParameter("Name_Product", name_Product) :
                new ObjectParameter("Name_Product", typeof(string));
    
            var idCategoryParameter = idCategory.HasValue ?
                new ObjectParameter("IdCategory", idCategory) :
                new ObjectParameter("IdCategory", typeof(int));
    
            var idProducerParameter = idProducer.HasValue ?
                new ObjectParameter("IdProducer", idProducer) :
                new ObjectParameter("IdProducer", typeof(int));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            var net_PriceParameter = net_Price.HasValue ?
                new ObjectParameter("Net_Price", net_Price) :
                new ObjectParameter("Net_Price", typeof(decimal));
    
            var idTax_LevelParameter = idTax_Level.HasValue ?
                new ObjectParameter("IdTax_Level", idTax_Level) :
                new ObjectParameter("IdTax_Level", typeof(int));
    
            var description_ProductParameter = description_Product != null ?
                new ObjectParameter("Description_Product", description_Product) :
                new ObjectParameter("Description_Product", typeof(string));
    
            var quantity_PossessedParameter = quantity_Possessed.HasValue ?
                new ObjectParameter("Quantity_Possessed", quantity_Possessed) :
                new ObjectParameter("Quantity_Possessed", typeof(int));
    
            var gross_PriceParameter = gross_Price.HasValue ?
                new ObjectParameter("Gross_Price", gross_Price) :
                new ObjectParameter("Gross_Price", typeof(decimal));
    
            var idProductParameter = idProduct.HasValue ?
                new ObjectParameter("IdProduct", idProduct) :
                new ObjectParameter("IdProduct", typeof(int));
    
            var image_UrlParameter = image_Url != null ?
                new ObjectParameter("Image_Url", image_Url) :
                new ObjectParameter("Image_Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProduct", name_ProductParameter, idCategoryParameter, idProducerParameter, idSupplierParameter, net_PriceParameter, idTax_LevelParameter, description_ProductParameter, quantity_PossessedParameter, gross_PriceParameter, idProductParameter, image_UrlParameter);
        }
    
        public virtual int UpdateReclamation(Nullable<int> idReclamation, Nullable<int> idStatus, string description)
        {
            var idReclamationParameter = idReclamation.HasValue ?
                new ObjectParameter("IdReclamation", idReclamation) :
                new ObjectParameter("IdReclamation", typeof(int));
    
            var idStatusParameter = idStatus.HasValue ?
                new ObjectParameter("IdStatus", idStatus) :
                new ObjectParameter("IdStatus", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReclamation", idReclamationParameter, idStatusParameter, descriptionParameter);
        }
    
        public virtual int UpdateReclamationStatus(Nullable<int> idReclamationStatus, string name)
        {
            var idReclamationStatusParameter = idReclamationStatus.HasValue ?
                new ObjectParameter("IdReclamationStatus", idReclamationStatus) :
                new ObjectParameter("IdReclamationStatus", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReclamationStatus", idReclamationStatusParameter, nameParameter);
        }
    
        public virtual int UpdateReturn(Nullable<int> idOrder, Nullable<int> idReturn)
        {
            var idOrderParameter = idOrder.HasValue ?
                new ObjectParameter("IdOrder", idOrder) :
                new ObjectParameter("IdOrder", typeof(int));
    
            var idReturnParameter = idReturn.HasValue ?
                new ObjectParameter("IdReturn", idReturn) :
                new ObjectParameter("IdReturn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateReturn", idOrderParameter, idReturnParameter);
        }
    
        public virtual int UpdateShippmentMethods(Nullable<int> idShippmentMethod, string name, string description, Nullable<decimal> price)
        {
            var idShippmentMethodParameter = idShippmentMethod.HasValue ?
                new ObjectParameter("IdShippmentMethod", idShippmentMethod) :
                new ObjectParameter("IdShippmentMethod", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateShippmentMethods", idShippmentMethodParameter, nameParameter, descriptionParameter, priceParameter);
        }
    
        public virtual int UpdateSupplier(string name_Supplier, Nullable<int> idSupplier)
        {
            var name_SupplierParameter = name_Supplier != null ?
                new ObjectParameter("Name_Supplier", name_Supplier) :
                new ObjectParameter("Name_Supplier", typeof(string));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSupplier", name_SupplierParameter, idSupplierParameter);
        }
    
        public virtual int UpdateSupply(Nullable<decimal> priceSupply, Nullable<int> idSupplier, Nullable<int> idSupply)
        {
            var priceSupplyParameter = priceSupply.HasValue ?
                new ObjectParameter("PriceSupply", priceSupply) :
                new ObjectParameter("PriceSupply", typeof(decimal));
    
            var idSupplierParameter = idSupplier.HasValue ?
                new ObjectParameter("IdSupplier", idSupplier) :
                new ObjectParameter("IdSupplier", typeof(int));
    
            var idSupplyParameter = idSupply.HasValue ?
                new ObjectParameter("IdSupply", idSupply) :
                new ObjectParameter("IdSupply", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSupply", priceSupplyParameter, idSupplierParameter, idSupplyParameter);
        }
    
        public virtual int UpdateTax(string name_Tax, Nullable<int> tax_Percent, Nullable<int> idTax_Level)
        {
            var name_TaxParameter = name_Tax != null ?
                new ObjectParameter("Name_Tax", name_Tax) :
                new ObjectParameter("Name_Tax", typeof(string));
    
            var tax_PercentParameter = tax_Percent.HasValue ?
                new ObjectParameter("Tax_Percent", tax_Percent) :
                new ObjectParameter("Tax_Percent", typeof(int));
    
            var idTax_LevelParameter = idTax_Level.HasValue ?
                new ObjectParameter("IdTax_Level", idTax_Level) :
                new ObjectParameter("IdTax_Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTax", name_TaxParameter, tax_PercentParameter, idTax_LevelParameter);
        }

    }
}
